generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  apiKeys   ApiKey[]
  sessions  Session[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model ApiKey {
  id          String        @id @default(cuid())
  name        String
  description String?
  keyValue    String
  service     String
  environment String        @default("production")
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  lastUsed    DateTime?
  userId      String
  usage       ApiKeyUsage[]
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  tags        Tag[]         @relation("ApiKeyToTag")

  @@map("api_keys")
}

model Tag {
  id      String   @id @default(cuid())
  name    String   @unique
  color   String   @default("#3B82F6")
  apiKeys ApiKey[] @relation("ApiKeyToTag")

  @@map("tags")
}

model ApiKeyUsage {
  id        String   @id @default(cuid())
  apiKeyId  String
  endpoint  String?
  timestamp DateTime @default(now())
  success   Boolean  @default(true)
  apiKey    ApiKey   @relation(fields: [apiKeyId], references: [id], onDelete: Cascade)

  @@map("api_key_usage")
}
